{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":6051848,"sourceType":"datasetVersion","datasetId":3462333}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-13T09:09:39.153708Z","iopub.execute_input":"2024-07-13T09:09:39.154942Z","iopub.status.idle":"2024-07-13T09:09:40.546999Z","shell.execute_reply.started":"2024-07-13T09:09:39.154898Z","shell.execute_reply":"2024-07-13T09:09:40.545785Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/student-performance-multiple-linear-regression/Student_Performance.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport os\n\ndata = pd.read_csv('/kaggle/input/student-performance-multiple-linear-regression/Student_Performance.csv')\ndata = pd.get_dummies(data, columns=['Extracurricular Activities'])\n","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:09:40.549825Z","iopub.execute_input":"2024-07-13T09:09:40.550473Z","iopub.status.idle":"2024-07-13T09:09:40.606872Z","shell.execute_reply.started":"2024-07-13T09:09:40.550407Z","shell.execute_reply":"2024-07-13T09:09:40.605681Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"import tensorflow as tf\nfrom tensorflow import keras","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:09:40.608158Z","iopub.execute_input":"2024-07-13T09:09:40.608505Z","iopub.status.idle":"2024-07-13T09:09:56.979850Z","shell.execute_reply.started":"2024-07-13T09:09:40.608468Z","shell.execute_reply":"2024-07-13T09:09:56.978487Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stderr","text":"2024-07-13 09:09:43.182671: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-07-13 09:09:43.182824: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-07-13 09:09:43.380963: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"}]},{"cell_type":"code","source":"data['Extracurricular Activities_Yes'] = data['Extracurricular Activities_Yes'].apply(lambda x: 1 if x else 0)\ndata['Extracurricular Activities_No'] = data['Extracurricular Activities_No'].apply(lambda x: 1 if x else 0)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:09:56.981896Z","iopub.execute_input":"2024-07-13T09:09:56.982781Z","iopub.status.idle":"2024-07-13T09:09:57.009086Z","shell.execute_reply.started":"2024-07-13T09:09:56.982734Z","shell.execute_reply":"2024-07-13T09:09:57.006740Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"data","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:09:57.014782Z","iopub.execute_input":"2024-07-13T09:09:57.015263Z","iopub.status.idle":"2024-07-13T09:09:57.050171Z","shell.execute_reply.started":"2024-07-13T09:09:57.015227Z","shell.execute_reply":"2024-07-13T09:09:57.048861Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"      Hours Studied  Previous Scores  Sleep Hours  \\\n0                 7               99            9   \n1                 4               82            4   \n2                 8               51            7   \n3                 5               52            5   \n4                 7               75            8   \n...             ...              ...          ...   \n9995              1               49            4   \n9996              7               64            8   \n9997              6               83            8   \n9998              9               97            7   \n9999              7               74            8   \n\n      Sample Question Papers Practiced  Performance Index  \\\n0                                    1               91.0   \n1                                    2               65.0   \n2                                    2               45.0   \n3                                    2               36.0   \n4                                    5               66.0   \n...                                ...                ...   \n9995                                 2               23.0   \n9996                                 5               58.0   \n9997                                 5               74.0   \n9998                                 0               95.0   \n9999                                 1               64.0   \n\n      Extracurricular Activities_No  Extracurricular Activities_Yes  \n0                                 0                               1  \n1                                 1                               0  \n2                                 0                               1  \n3                                 0                               1  \n4                                 1                               0  \n...                             ...                             ...  \n9995                              0                               1  \n9996                              0                               1  \n9997                              0                               1  \n9998                              0                               1  \n9999                              1                               0  \n\n[10000 rows x 7 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Hours Studied</th>\n      <th>Previous Scores</th>\n      <th>Sleep Hours</th>\n      <th>Sample Question Papers Practiced</th>\n      <th>Performance Index</th>\n      <th>Extracurricular Activities_No</th>\n      <th>Extracurricular Activities_Yes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>7</td>\n      <td>99</td>\n      <td>9</td>\n      <td>1</td>\n      <td>91.0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>82</td>\n      <td>4</td>\n      <td>2</td>\n      <td>65.0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>8</td>\n      <td>51</td>\n      <td>7</td>\n      <td>2</td>\n      <td>45.0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5</td>\n      <td>52</td>\n      <td>5</td>\n      <td>2</td>\n      <td>36.0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7</td>\n      <td>75</td>\n      <td>8</td>\n      <td>5</td>\n      <td>66.0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>9995</th>\n      <td>1</td>\n      <td>49</td>\n      <td>4</td>\n      <td>2</td>\n      <td>23.0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>9996</th>\n      <td>7</td>\n      <td>64</td>\n      <td>8</td>\n      <td>5</td>\n      <td>58.0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>9997</th>\n      <td>6</td>\n      <td>83</td>\n      <td>8</td>\n      <td>5</td>\n      <td>74.0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>9998</th>\n      <td>9</td>\n      <td>97</td>\n      <td>7</td>\n      <td>0</td>\n      <td>95.0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>9999</th>\n      <td>7</td>\n      <td>74</td>\n      <td>8</td>\n      <td>1</td>\n      <td>64.0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>10000 rows × 7 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\n# from sklearn.preprocessing import O\ntrain, test = train_test_split(data, test_size = 0.1)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:09:57.052099Z","iopub.execute_input":"2024-07-13T09:09:57.052842Z","iopub.status.idle":"2024-07-13T09:09:58.500719Z","shell.execute_reply.started":"2024-07-13T09:09:57.052798Z","shell.execute_reply":"2024-07-13T09:09:58.499351Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"test","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:09:58.502475Z","iopub.execute_input":"2024-07-13T09:09:58.503346Z","iopub.status.idle":"2024-07-13T09:09:58.521127Z","shell.execute_reply.started":"2024-07-13T09:09:58.503308Z","shell.execute_reply":"2024-07-13T09:09:58.519960Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"      Hours Studied  Previous Scores  Sleep Hours  \\\n6111              1               52            8   \n1334              2               58            8   \n6021              9               76            6   \n6766              9               80            9   \n2939              1               72            5   \n...             ...              ...          ...   \n882               4               63            5   \n4735              3               63            6   \n580               9               66            5   \n4158              9               50            7   \n8704              9               92            7   \n\n      Sample Question Papers Practiced  Performance Index  \\\n6111                                 8               25.0   \n1334                                 4               34.0   \n6021                                 2               72.0   \n6766                                 0               79.0   \n2939                                 9               46.0   \n...                                ...                ...   \n882                                  9               47.0   \n4735                                 5               43.0   \n580                                  6               62.0   \n4158                                 8               45.0   \n8704                                 6               89.0   \n\n      Extracurricular Activities_No  Extracurricular Activities_Yes  \n6111                              1                               0  \n1334                              0                               1  \n6021                              1                               0  \n6766                              0                               1  \n2939                              1                               0  \n...                             ...                             ...  \n882                               0                               1  \n4735                              0                               1  \n580                               1                               0  \n4158                              1                               0  \n8704                              1                               0  \n\n[1000 rows x 7 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Hours Studied</th>\n      <th>Previous Scores</th>\n      <th>Sleep Hours</th>\n      <th>Sample Question Papers Practiced</th>\n      <th>Performance Index</th>\n      <th>Extracurricular Activities_No</th>\n      <th>Extracurricular Activities_Yes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>6111</th>\n      <td>1</td>\n      <td>52</td>\n      <td>8</td>\n      <td>8</td>\n      <td>25.0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1334</th>\n      <td>2</td>\n      <td>58</td>\n      <td>8</td>\n      <td>4</td>\n      <td>34.0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>6021</th>\n      <td>9</td>\n      <td>76</td>\n      <td>6</td>\n      <td>2</td>\n      <td>72.0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6766</th>\n      <td>9</td>\n      <td>80</td>\n      <td>9</td>\n      <td>0</td>\n      <td>79.0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2939</th>\n      <td>1</td>\n      <td>72</td>\n      <td>5</td>\n      <td>9</td>\n      <td>46.0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>882</th>\n      <td>4</td>\n      <td>63</td>\n      <td>5</td>\n      <td>9</td>\n      <td>47.0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4735</th>\n      <td>3</td>\n      <td>63</td>\n      <td>6</td>\n      <td>5</td>\n      <td>43.0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>580</th>\n      <td>9</td>\n      <td>66</td>\n      <td>5</td>\n      <td>6</td>\n      <td>62.0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4158</th>\n      <td>9</td>\n      <td>50</td>\n      <td>7</td>\n      <td>8</td>\n      <td>45.0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>8704</th>\n      <td>9</td>\n      <td>92</td>\n      <td>7</td>\n      <td>6</td>\n      <td>89.0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>1000 rows × 7 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"X_train = train.drop('Performance Index', axis = 1)\nX_test = test.drop('Performance Index', axis = 1)\ny_train = train['Performance Index']\ny_test = test['Performance Index']","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:09:58.522695Z","iopub.execute_input":"2024-07-13T09:09:58.523176Z","iopub.status.idle":"2024-07-13T09:09:58.535698Z","shell.execute_reply.started":"2024-07-13T09:09:58.523137Z","shell.execute_reply":"2024-07-13T09:09:58.534344Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"X_train.shape","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:09:58.537469Z","iopub.execute_input":"2024-07-13T09:09:58.537915Z","iopub.status.idle":"2024-07-13T09:09:58.549070Z","shell.execute_reply.started":"2024-07-13T09:09:58.537883Z","shell.execute_reply":"2024-07-13T09:09:58.547713Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"(9000, 6)"},"metadata":{}}]},{"cell_type":"code","source":"model_1 = keras.models.Sequential([\n    keras.layers.Input(shape = X_train.shape[1:]),\n    keras.layers.Dense(units= 500, kernel_initializer =\"lecun_normal\" ), \n#     keras.layers.PRelu(),\n    keras.layers.Dense(units= 300, activation = \"relu\", kernel_initializer =\"lecun_normal\" ), \n#     keras.layers.Dense(units= 500, activation = \"relu\", kernel_initializer =\"he_normal\" ), \n    keras.layers.Dense(units= 300, activation = \"relu\", kernel_initializer =\"lecun_normal\" ),\n    keras.layers.Dense(units= 300, activation = \"relu\", kernel_initializer =\"lecun_normal\" ),\n    keras.layers.Dense(units= 100, activation = \"relu\", kernel_initializer =\"lecun_normal\" ),\n    keras.layers.Dense(units= 100, activation = \"relu\", kernel_initializer =\"lecun_normal\" ),\n    keras.layers.Dense(units= 1, activation = \"relu\", kernel_initializer =\"lecun_normal\" ) ]\n)\n\nmodel_1.summary()","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:09:58.550882Z","iopub.execute_input":"2024-07-13T09:09:58.551273Z","iopub.status.idle":"2024-07-13T09:09:58.755927Z","shell.execute_reply.started":"2024-07-13T09:09:58.551243Z","shell.execute_reply":"2024-07-13T09:09:58.754647Z"},"trusted":true},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m500\u001b[0m)            │         \u001b[38;5;34m3,500\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m300\u001b[0m)            │       \u001b[38;5;34m150,300\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_2 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m300\u001b[0m)            │        \u001b[38;5;34m90,300\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_3 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m300\u001b[0m)            │        \u001b[38;5;34m90,300\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_4 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │        \u001b[38;5;34m30,100\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_5 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │        \u001b[38;5;34m10,100\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_6 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m101\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">500</span>)            │         <span style=\"color: #00af00; text-decoration-color: #00af00\">3,500</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">300</span>)            │       <span style=\"color: #00af00; text-decoration-color: #00af00\">150,300</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">300</span>)            │        <span style=\"color: #00af00; text-decoration-color: #00af00\">90,300</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">300</span>)            │        <span style=\"color: #00af00; text-decoration-color: #00af00\">90,300</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │        <span style=\"color: #00af00; text-decoration-color: #00af00\">30,100</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │        <span style=\"color: #00af00; text-decoration-color: #00af00\">10,100</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">101</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m374,701\u001b[0m (1.43 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">374,701</span> (1.43 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m374,701\u001b[0m (1.43 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">374,701</span> (1.43 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"model_1.compile(\n    optimizer = keras.optimizers.Adam(learning_rate=0.001),\n    loss = keras.losses.mse,\n    metrics = ['mse']\n)","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:09:58.757537Z","iopub.execute_input":"2024-07-13T09:09:58.757990Z","iopub.status.idle":"2024-07-13T09:09:58.777768Z","shell.execute_reply.started":"2024-07-13T09:09:58.757942Z","shell.execute_reply":"2024-07-13T09:09:58.776506Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"es_cb = keras.callbacks.EarlyStopping(patience = 20)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:09:58.779363Z","iopub.execute_input":"2024-07-13T09:09:58.779845Z","iopub.status.idle":"2024-07-13T09:09:58.785529Z","shell.execute_reply.started":"2024-07-13T09:09:58.779800Z","shell.execute_reply":"2024-07-13T09:09:58.784133Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"y_train","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:09:58.786911Z","iopub.execute_input":"2024-07-13T09:09:58.787366Z","iopub.status.idle":"2024-07-13T09:09:58.804561Z","shell.execute_reply.started":"2024-07-13T09:09:58.787319Z","shell.execute_reply":"2024-07-13T09:09:58.803165Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"5391    72.0\n5877    32.0\n9451    53.0\n1785    49.0\n6815    70.0\n        ... \n4776    55.0\n7227    88.0\n6102    63.0\n9681    53.0\n8164    78.0\nName: Performance Index, Length: 9000, dtype: float64"},"metadata":{}}]},{"cell_type":"code","source":"log_dir = './logs'\ntensorboard_callback = keras.callbacks.TensorBoard(log_dir = log_dir, write_images = True, write_graph = True)","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:09:58.809242Z","iopub.execute_input":"2024-07-13T09:09:58.809737Z","iopub.status.idle":"2024-07-13T09:09:58.816168Z","shell.execute_reply.started":"2024-07-13T09:09:58.809704Z","shell.execute_reply":"2024-07-13T09:09:58.814943Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"code","source":"# X_train.to_numpy()\ny_train.to_numpy()","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:09:58.818249Z","iopub.execute_input":"2024-07-13T09:09:58.818773Z","iopub.status.idle":"2024-07-13T09:09:58.830622Z","shell.execute_reply.started":"2024-07-13T09:09:58.818722Z","shell.execute_reply":"2024-07-13T09:09:58.828970Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"array([72., 32., 53., ..., 63., 53., 78.])"},"metadata":{}}]},{"cell_type":"code","source":"model_1.fit(\n    X_train, \n    y_train, \n    validation_split= 0.1,\n    epochs = 100,\n    batch_size = 8,\n    callbacks = [es_cb]\n    \n)","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:09:58.832262Z","iopub.execute_input":"2024-07-13T09:09:58.832751Z","iopub.status.idle":"2024-07-13T09:13:34.844235Z","shell.execute_reply.started":"2024-07-13T09:09:58.832708Z","shell.execute_reply":"2024-07-13T09:13:34.842638Z"},"trusted":true},"execution_count":16,"outputs":[{"name":"stdout","text":"Epoch 1/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 6ms/step - loss: 92.8554 - mse: 92.8554 - val_loss: 35.6977 - val_mse: 35.6977\nEpoch 2/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 31.7621 - mse: 31.7621 - val_loss: 22.4676 - val_mse: 22.4676\nEpoch 3/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 19.6991 - mse: 19.6991 - val_loss: 13.1196 - val_mse: 13.1196\nEpoch 4/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 8.8907 - mse: 8.8907 - val_loss: 11.7622 - val_mse: 11.7622\nEpoch 5/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 7.7544 - mse: 7.7544 - val_loss: 4.5127 - val_mse: 4.5127\nEpoch 6/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 7.5188 - mse: 7.5188 - val_loss: 4.5778 - val_mse: 4.5778\nEpoch 7/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.9601 - mse: 6.9601 - val_loss: 5.3151 - val_mse: 5.3151\nEpoch 8/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.5333 - mse: 6.5333 - val_loss: 4.6205 - val_mse: 4.6205\nEpoch 9/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 7.0186 - mse: 7.0186 - val_loss: 4.4793 - val_mse: 4.4793\nEpoch 10/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.0490 - mse: 6.0490 - val_loss: 4.2663 - val_mse: 4.2663\nEpoch 11/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.9942 - mse: 6.9942 - val_loss: 6.7965 - val_mse: 6.7965\nEpoch 12/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.9016 - mse: 5.9016 - val_loss: 10.6196 - val_mse: 10.6196\nEpoch 13/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.0572 - mse: 6.0572 - val_loss: 5.3192 - val_mse: 5.3192\nEpoch 14/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.5002 - mse: 6.5002 - val_loss: 5.2255 - val_mse: 5.2255\nEpoch 15/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.2564 - mse: 6.2564 - val_loss: 4.4724 - val_mse: 4.4724\nEpoch 16/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.6978 - mse: 5.6978 - val_loss: 6.9049 - val_mse: 6.9049\nEpoch 17/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.4761 - mse: 6.4761 - val_loss: 5.2859 - val_mse: 5.2859\nEpoch 18/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.9210 - mse: 5.9210 - val_loss: 11.9867 - val_mse: 11.9867\nEpoch 19/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.5612 - mse: 6.5612 - val_loss: 5.4923 - val_mse: 5.4923\nEpoch 20/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.8725 - mse: 5.8725 - val_loss: 4.2400 - val_mse: 4.2400\nEpoch 21/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.2896 - mse: 6.2896 - val_loss: 7.9507 - val_mse: 7.9507\nEpoch 22/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.3390 - mse: 5.3390 - val_loss: 4.7669 - val_mse: 4.7669\nEpoch 23/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.9403 - mse: 5.9403 - val_loss: 5.1100 - val_mse: 5.1100\nEpoch 24/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 5ms/step - loss: 5.5536 - mse: 5.5536 - val_loss: 4.6651 - val_mse: 4.6651\nEpoch 25/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.8767 - mse: 5.8767 - val_loss: 9.5071 - val_mse: 9.5071\nEpoch 26/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.7441 - mse: 5.7441 - val_loss: 11.7249 - val_mse: 11.7249\nEpoch 27/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.7234 - mse: 5.7234 - val_loss: 6.3261 - val_mse: 6.3261\nEpoch 28/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.6479 - mse: 5.6479 - val_loss: 4.7451 - val_mse: 4.7451\nEpoch 29/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.5201 - mse: 5.5201 - val_loss: 4.2897 - val_mse: 4.2897\nEpoch 30/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.4566 - mse: 5.4566 - val_loss: 5.1414 - val_mse: 5.1414\nEpoch 31/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.3511 - mse: 5.3511 - val_loss: 5.1833 - val_mse: 5.1833\nEpoch 32/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.8639 - mse: 5.8639 - val_loss: 4.3172 - val_mse: 4.3172\nEpoch 33/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.6197 - mse: 5.6197 - val_loss: 4.4171 - val_mse: 4.4171\nEpoch 34/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.4421 - mse: 5.4421 - val_loss: 9.8170 - val_mse: 9.8170\nEpoch 35/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.3497 - mse: 5.3497 - val_loss: 4.6031 - val_mse: 4.6031\nEpoch 36/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 5ms/step - loss: 5.1000 - mse: 5.1000 - val_loss: 5.5844 - val_mse: 5.5844\nEpoch 37/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.2918 - mse: 5.2918 - val_loss: 6.7020 - val_mse: 6.7020\nEpoch 38/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.6109 - mse: 5.6109 - val_loss: 5.5275 - val_mse: 5.5275\nEpoch 39/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.1303 - mse: 5.1303 - val_loss: 4.5134 - val_mse: 4.5134\nEpoch 40/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.3358 - mse: 5.3358 - val_loss: 4.6240 - val_mse: 4.6240\n","output_type":"stream"},{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"<keras.src.callbacks.history.History at 0x790a9564dff0>"},"metadata":{}}]},{"cell_type":"code","source":"model_1.evaluate(X_test, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:13:34.847710Z","iopub.execute_input":"2024-07-13T09:13:34.848206Z","iopub.status.idle":"2024-07-13T09:13:35.043359Z","shell.execute_reply.started":"2024-07-13T09:13:34.848163Z","shell.execute_reply":"2024-07-13T09:13:35.042221Z"},"trusted":true},"execution_count":17,"outputs":[{"name":"stdout","text":"\u001b[1m32/32\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - loss: 4.3238 - mse: 4.3238\n","output_type":"stream"},{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"[4.662923336029053, 4.662923336029053]"},"metadata":{}}]},{"cell_type":"code","source":"test","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:13:35.044906Z","iopub.execute_input":"2024-07-13T09:13:35.045264Z","iopub.status.idle":"2024-07-13T09:13:35.062695Z","shell.execute_reply.started":"2024-07-13T09:13:35.045234Z","shell.execute_reply":"2024-07-13T09:13:35.061242Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"      Hours Studied  Previous Scores  Sleep Hours  \\\n6111              1               52            8   \n1334              2               58            8   \n6021              9               76            6   \n6766              9               80            9   \n2939              1               72            5   \n...             ...              ...          ...   \n882               4               63            5   \n4735              3               63            6   \n580               9               66            5   \n4158              9               50            7   \n8704              9               92            7   \n\n      Sample Question Papers Practiced  Performance Index  \\\n6111                                 8               25.0   \n1334                                 4               34.0   \n6021                                 2               72.0   \n6766                                 0               79.0   \n2939                                 9               46.0   \n...                                ...                ...   \n882                                  9               47.0   \n4735                                 5               43.0   \n580                                  6               62.0   \n4158                                 8               45.0   \n8704                                 6               89.0   \n\n      Extracurricular Activities_No  Extracurricular Activities_Yes  \n6111                              1                               0  \n1334                              0                               1  \n6021                              1                               0  \n6766                              0                               1  \n2939                              1                               0  \n...                             ...                             ...  \n882                               0                               1  \n4735                              0                               1  \n580                               1                               0  \n4158                              1                               0  \n8704                              1                               0  \n\n[1000 rows x 7 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Hours Studied</th>\n      <th>Previous Scores</th>\n      <th>Sleep Hours</th>\n      <th>Sample Question Papers Practiced</th>\n      <th>Performance Index</th>\n      <th>Extracurricular Activities_No</th>\n      <th>Extracurricular Activities_Yes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>6111</th>\n      <td>1</td>\n      <td>52</td>\n      <td>8</td>\n      <td>8</td>\n      <td>25.0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1334</th>\n      <td>2</td>\n      <td>58</td>\n      <td>8</td>\n      <td>4</td>\n      <td>34.0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>6021</th>\n      <td>9</td>\n      <td>76</td>\n      <td>6</td>\n      <td>2</td>\n      <td>72.0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6766</th>\n      <td>9</td>\n      <td>80</td>\n      <td>9</td>\n      <td>0</td>\n      <td>79.0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2939</th>\n      <td>1</td>\n      <td>72</td>\n      <td>5</td>\n      <td>9</td>\n      <td>46.0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>882</th>\n      <td>4</td>\n      <td>63</td>\n      <td>5</td>\n      <td>9</td>\n      <td>47.0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4735</th>\n      <td>3</td>\n      <td>63</td>\n      <td>6</td>\n      <td>5</td>\n      <td>43.0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>580</th>\n      <td>9</td>\n      <td>66</td>\n      <td>5</td>\n      <td>6</td>\n      <td>62.0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4158</th>\n      <td>9</td>\n      <td>50</td>\n      <td>7</td>\n      <td>8</td>\n      <td>45.0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>8704</th>\n      <td>9</td>\n      <td>92</td>\n      <td>7</td>\n      <td>6</td>\n      <td>89.0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>1000 rows × 7 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"tensorboard_callback = keras.callbacks.TensorBoard(\n    log_dir = \"./logs\",\n    write_images  = True,\n    write_graph = True\n)","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:14:51.644423Z","iopub.execute_input":"2024-07-13T09:14:51.644881Z","iopub.status.idle":"2024-07-13T09:14:51.650636Z","shell.execute_reply.started":"2024-07-13T09:14:51.644846Z","shell.execute_reply":"2024-07-13T09:14:51.649503Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"code","source":"model_normalized = keras.models.Sequential([\n    keras.layers.Input(shape = X_train.shape[1:]),\n    keras.layers.Dense(units= 300 ), \n    keras.layers.LeakyReLU(negative_slope=0.2),\n    keras.layers.Dense(units= 300),\n    keras.layers.LeakyReLU(negative_slope=0.2),\n    keras.layers.Dense(units= 300),\n    keras.layers.LeakyReLU(negative_slope=0.2),\n    keras.layers.Dense(units= 300),\n    keras.layers.LeakyReLU(negative_slope=0.2),\n    keras.layers.Dense(units= 100, activation = \"relu\", kernel_initializer =\"lecun_normal\" ),\n    keras.layers.Dense(units= 100, activation = \"relu\", kernel_initializer =\"lecun_normal\" ),\n    keras.layers.Dense(units= 1, activation = \"relu\", kernel_initializer =\"lecun_normal\" )  ]\n)\n\nmodel_normalized.compile(\n    optimizer = keras.optimizers.Adam(learning_rate=0.001),\n    loss = keras.losses.mse,\n    metrics = ['mse']\n)\n\nmodel_normalized.fit(\n    X_train, \n    y_train, \n    validation_split= 0.1,\n    epochs = 100,\n    batch_size = 8,\n    callbacks = [es_cb, tensorboard_callback]\n    \n)","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:18:01.612849Z","iopub.execute_input":"2024-07-13T09:18:01.613280Z","iopub.status.idle":"2024-07-13T09:19:53.601873Z","shell.execute_reply.started":"2024-07-13T09:18:01.613249Z","shell.execute_reply":"2024-07-13T09:19:53.600556Z"},"trusted":true},"execution_count":23,"outputs":[{"name":"stdout","text":"Epoch 1/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 6ms/step - loss: 134.0653 - mse: 134.0653 - val_loss: 11.2792 - val_mse: 11.2792\nEpoch 2/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 10.9157 - mse: 10.9157 - val_loss: 8.0565 - val_mse: 8.0565\nEpoch 3/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 7.5915 - mse: 7.5915 - val_loss: 6.0014 - val_mse: 6.0014\nEpoch 4/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 5ms/step - loss: 6.9206 - mse: 6.9206 - val_loss: 5.9940 - val_mse: 5.9940\nEpoch 5/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 7.8565 - mse: 7.8565 - val_loss: 4.5552 - val_mse: 4.5552\nEpoch 6/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 7.7343 - mse: 7.7343 - val_loss: 11.0607 - val_mse: 11.0607\nEpoch 7/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 7.4494 - mse: 7.4494 - val_loss: 7.3606 - val_mse: 7.3606\nEpoch 8/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.8036 - mse: 6.8036 - val_loss: 4.3914 - val_mse: 4.3914\nEpoch 9/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.5823 - mse: 6.5823 - val_loss: 6.6346 - val_mse: 6.6346\nEpoch 10/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 6ms/step - loss: 6.3199 - mse: 6.3199 - val_loss: 5.4391 - val_mse: 5.4391\nEpoch 11/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.3014 - mse: 6.3014 - val_loss: 4.6572 - val_mse: 4.6572\nEpoch 12/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.3763 - mse: 6.3763 - val_loss: 17.3842 - val_mse: 17.3842\nEpoch 13/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 5ms/step - loss: 6.4490 - mse: 6.4490 - val_loss: 6.8622 - val_mse: 6.8622\nEpoch 14/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.3137 - mse: 6.3137 - val_loss: 4.7179 - val_mse: 4.7179\nEpoch 15/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 6ms/step - loss: 6.0309 - mse: 6.0309 - val_loss: 4.8972 - val_mse: 4.8972\nEpoch 16/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 6ms/step - loss: 6.4295 - mse: 6.4295 - val_loss: 5.2830 - val_mse: 5.2830\nEpoch 17/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.3790 - mse: 6.3790 - val_loss: 5.7529 - val_mse: 5.7529\nEpoch 18/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.1981 - mse: 6.1981 - val_loss: 4.7686 - val_mse: 4.7686\nEpoch 19/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.2326 - mse: 6.2326 - val_loss: 4.4094 - val_mse: 4.4094\nEpoch 20/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.8441 - mse: 5.8441 - val_loss: 12.8415 - val_mse: 12.8415\n","output_type":"stream"},{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"<keras.src.callbacks.history.History at 0x790a6b43d810>"},"metadata":{}}]},{"cell_type":"code","source":"model_normalized.evaluate(X_test, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:20:16.673301Z","iopub.execute_input":"2024-07-13T09:20:16.674230Z","iopub.status.idle":"2024-07-13T09:20:16.847814Z","shell.execute_reply.started":"2024-07-13T09:20:16.674188Z","shell.execute_reply":"2024-07-13T09:20:16.846540Z"},"trusted":true},"execution_count":24,"outputs":[{"name":"stdout","text":"\u001b[1m32/32\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - loss: 12.4615 - mse: 12.4615\n","output_type":"stream"},{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"[13.570403099060059, 13.570403099060059]"},"metadata":{}}]},{"cell_type":"code","source":"model_glorot = keras.models.Sequential([\n    keras.layers.Input(shape = X_train.shape[1:]),\n    keras.layers.Dense(units= 500 , activation = \"tanh\" ), \n    keras.layers.Dense(units= 300, activation = \"tanh\" ), \n    keras.layers.Dense(units= 300, activation = \"tanh\" ),\n    keras.layers.Dense(units= 300, activation = \"tanh\" ),\n    keras.layers.Dense(units= 100, activation = \"tanh\" ),\n    keras.layers.Dense(units= 100, activation = \"tanh\" ),\n    keras.layers.Dense(units= 1, activation = \"tanh\" ) ]\n)\n\nmodel_glorot.compile(\n    optimizer = keras.optimizers.Adam(learning_rate=0.001),\n    loss = keras.losses.mse,\n    metrics = ['mse']\n)\n\nmodel_glorot.fit(\n    X_train, \n    y_train, \n    validation_split= 0.1,\n    epochs = 100,\n    batch_size = 8,\n    callbacks = [es_cb]\n    \n)","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:24:54.371986Z","iopub.execute_input":"2024-07-13T09:24:54.372462Z","iopub.status.idle":"2024-07-13T09:26:45.554411Z","shell.execute_reply.started":"2024-07-13T09:24:54.372411Z","shell.execute_reply":"2024-07-13T09:26:45.553131Z"},"trusted":true},"execution_count":30,"outputs":[{"name":"stdout","text":"Epoch 1/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 5ms/step - loss: 3373.1736 - mse: 3373.1736 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 2/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 3337.9114 - mse: 3337.9114 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 3/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 3327.5854 - mse: 3327.5854 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 4/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 6ms/step - loss: 3296.5054 - mse: 3296.5054 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 5/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 3289.2537 - mse: 3289.2537 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 6/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 3305.7910 - mse: 3305.7910 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 7/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 3351.0491 - mse: 3351.0491 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 8/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 3304.1042 - mse: 3304.1042 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 9/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 3297.3010 - mse: 3297.3010 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 10/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 5ms/step - loss: 3323.1829 - mse: 3323.1829 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 11/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 3318.5479 - mse: 3318.5479 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 12/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 3321.3562 - mse: 3321.3562 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 13/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 5ms/step - loss: 3299.3132 - mse: 3299.3132 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 14/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 3332.4431 - mse: 3332.4431 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 15/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 3342.7603 - mse: 3342.7603 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 16/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 6ms/step - loss: 3315.3660 - mse: 3315.3660 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 17/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 3306.4858 - mse: 3306.4858 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 18/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 3326.8601 - mse: 3326.8601 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 19/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 3352.3743 - mse: 3352.3743 - val_loss: 3151.8401 - val_mse: 3151.8401\nEpoch 20/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 3316.1108 - mse: 3316.1108 - val_loss: 3151.8401 - val_mse: 3151.8401\n","output_type":"stream"},{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"<keras.src.callbacks.history.History at 0x790a6bf8f730>"},"metadata":{}}]},{"cell_type":"code","source":"model_he = keras.models.Sequential([\n    keras.layers.Input(shape = X_train.shape[1:]),\n    keras.layers.Dense(units= 500 , activation = \"relu\", kernel_initializer =\"he_normal\"), \n    keras.layers.Dense(units= 300, activation = \"relu\", kernel_initializer =\"he_normal\" ), \n    keras.layers.Dense(units= 300, activation = \"relu\", kernel_initializer =\"he_normal\" ),\n    keras.layers.Dense(units= 300, activation = \"relu\", kernel_initializer =\"he_normal\" ),\n    keras.layers.Dense(units= 100, activation = \"relu\", kernel_initializer =\"he_normal\" ),\n    keras.layers.Dense(units= 100, activation = \"relu\", kernel_initializer =\"he_normal\" ),\n    keras.layers.Dense(units= 1, activation = \"relu\", kernel_initializer =\"he_normal\" ) ]\n)\n\nmodel_he.compile(\n    optimizer = keras.optimizers.Adam(learning_rate=0.001),\n    loss = keras.losses.mse,\n    metrics = ['mse']\n)\n\nmodel_he.fit(\n    X_train, \n    y_train, \n    validation_split= 0.1,\n    epochs = 100,\n    batch_size = 8,\n    callbacks = [es_cb]\n    \n)","metadata":{"execution":{"iopub.status.busy":"2024-07-13T10:28:16.219752Z","iopub.execute_input":"2024-07-13T10:28:16.220850Z","iopub.status.idle":"2024-07-13T10:28:24.312913Z","shell.execute_reply.started":"2024-07-13T10:28:16.220808Z","shell.execute_reply":"2024-07-13T10:28:24.310959Z"},"trusted":true},"execution_count":50,"outputs":[{"name":"stdout","text":"Epoch 1/100\n\u001b[1m1006/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 3445.2043 - mse: 3445.2043","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","Cell \u001b[0;32mIn[50], line 18\u001b[0m\n\u001b[1;32m      1\u001b[0m model_he \u001b[38;5;241m=\u001b[39m keras\u001b[38;5;241m.\u001b[39mmodels\u001b[38;5;241m.\u001b[39mSequential([\n\u001b[1;32m      2\u001b[0m     keras\u001b[38;5;241m.\u001b[39mlayers\u001b[38;5;241m.\u001b[39mInput(shape \u001b[38;5;241m=\u001b[39m X_train\u001b[38;5;241m.\u001b[39mshape[\u001b[38;5;241m1\u001b[39m:]),\n\u001b[1;32m      3\u001b[0m     keras\u001b[38;5;241m.\u001b[39mlayers\u001b[38;5;241m.\u001b[39mDense(units\u001b[38;5;241m=\u001b[39m \u001b[38;5;241m500\u001b[39m , activation \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrelu\u001b[39m\u001b[38;5;124m\"\u001b[39m, kernel_initializer \u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhe_normal\u001b[39m\u001b[38;5;124m\"\u001b[39m), \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m      9\u001b[0m     keras\u001b[38;5;241m.\u001b[39mlayers\u001b[38;5;241m.\u001b[39mDense(units\u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1\u001b[39m, activation \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrelu\u001b[39m\u001b[38;5;124m\"\u001b[39m, kernel_initializer \u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhe_normal\u001b[39m\u001b[38;5;124m\"\u001b[39m ) ]\n\u001b[1;32m     10\u001b[0m )\n\u001b[1;32m     12\u001b[0m model_he\u001b[38;5;241m.\u001b[39mcompile(\n\u001b[1;32m     13\u001b[0m     optimizer \u001b[38;5;241m=\u001b[39m keras\u001b[38;5;241m.\u001b[39moptimizers\u001b[38;5;241m.\u001b[39mAdam(learning_rate\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0.001\u001b[39m),\n\u001b[1;32m     14\u001b[0m     loss \u001b[38;5;241m=\u001b[39m keras\u001b[38;5;241m.\u001b[39mlosses\u001b[38;5;241m.\u001b[39mmse,\n\u001b[1;32m     15\u001b[0m     metrics \u001b[38;5;241m=\u001b[39m [\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mmse\u001b[39m\u001b[38;5;124m'\u001b[39m]\n\u001b[1;32m     16\u001b[0m )\n\u001b[0;32m---> 18\u001b[0m \u001b[43mmodel_he\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfit\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m     19\u001b[0m \u001b[43m    \u001b[49m\u001b[43mX_train\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\n\u001b[1;32m     20\u001b[0m \u001b[43m    \u001b[49m\u001b[43my_train\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\n\u001b[1;32m     21\u001b[0m \u001b[43m    \u001b[49m\u001b[43mvalidation_split\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;241;43m0.1\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m     22\u001b[0m \u001b[43m    \u001b[49m\u001b[43mepochs\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;241;43m100\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m     23\u001b[0m \u001b[43m    \u001b[49m\u001b[43mbatch_size\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;241;43m8\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m     24\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcallbacks\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[43m[\u001b[49m\u001b[43mes_cb\u001b[49m\u001b[43m]\u001b[49m\n\u001b[1;32m     25\u001b[0m \u001b[43m    \u001b[49m\n\u001b[1;32m     26\u001b[0m \u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py:117\u001b[0m, in \u001b[0;36mfilter_traceback.<locals>.error_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    115\u001b[0m filtered_tb \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m    116\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m--> 117\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfn\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    118\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[1;32m    119\u001b[0m     filtered_tb \u001b[38;5;241m=\u001b[39m _process_traceback_frames(e\u001b[38;5;241m.\u001b[39m__traceback__)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/keras/src/backend/tensorflow/trainer.py:339\u001b[0m, in \u001b[0;36mTensorFlowTrainer.fit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq)\u001b[0m\n\u001b[1;32m    328\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mgetattr\u001b[39m(\u001b[38;5;28mself\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m_eval_epoch_iterator\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m) \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m    329\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_eval_epoch_iterator \u001b[38;5;241m=\u001b[39m TFEpochIterator(\n\u001b[1;32m    330\u001b[0m         x\u001b[38;5;241m=\u001b[39mval_x,\n\u001b[1;32m    331\u001b[0m         y\u001b[38;5;241m=\u001b[39mval_y,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    337\u001b[0m         shuffle\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m,\n\u001b[1;32m    338\u001b[0m     )\n\u001b[0;32m--> 339\u001b[0m val_logs \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mevaluate\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    340\u001b[0m \u001b[43m    \u001b[49m\u001b[43mx\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mval_x\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    341\u001b[0m \u001b[43m    \u001b[49m\u001b[43my\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mval_y\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    342\u001b[0m \u001b[43m    \u001b[49m\u001b[43msample_weight\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mval_sample_weight\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    343\u001b[0m \u001b[43m    \u001b[49m\u001b[43mbatch_size\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mvalidation_batch_size\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01mor\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mbatch_size\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    344\u001b[0m \u001b[43m    \u001b[49m\u001b[43msteps\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mvalidation_steps\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    345\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcallbacks\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcallbacks\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    346\u001b[0m \u001b[43m    \u001b[49m\u001b[43mreturn_dict\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m,\u001b[49m\n\u001b[1;32m    347\u001b[0m \u001b[43m    \u001b[49m\u001b[43m_use_cached_eval_dataset\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m,\u001b[49m\n\u001b[1;32m    348\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    349\u001b[0m val_logs \u001b[38;5;241m=\u001b[39m {\n\u001b[1;32m    350\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mval_\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;241m+\u001b[39m name: val \u001b[38;5;28;01mfor\u001b[39;00m name, val \u001b[38;5;129;01min\u001b[39;00m val_logs\u001b[38;5;241m.\u001b[39mitems()\n\u001b[1;32m    351\u001b[0m }\n\u001b[1;32m    352\u001b[0m epoch_logs\u001b[38;5;241m.\u001b[39mupdate(val_logs)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py:117\u001b[0m, in \u001b[0;36mfilter_traceback.<locals>.error_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    115\u001b[0m filtered_tb \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m    116\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m--> 117\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfn\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    118\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[1;32m    119\u001b[0m     filtered_tb \u001b[38;5;241m=\u001b[39m _process_traceback_frames(e\u001b[38;5;241m.\u001b[39m__traceback__)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/keras/src/backend/tensorflow/trainer.py:425\u001b[0m, in \u001b[0;36mTensorFlowTrainer.evaluate\u001b[0;34m(self, x, y, batch_size, verbose, sample_weight, steps, callbacks, return_dict, **kwargs)\u001b[0m\n\u001b[1;32m    423\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m step, iterator \u001b[38;5;129;01min\u001b[39;00m epoch_iterator\u001b[38;5;241m.\u001b[39menumerate_epoch():\n\u001b[1;32m    424\u001b[0m     callbacks\u001b[38;5;241m.\u001b[39mon_test_batch_begin(step)\n\u001b[0;32m--> 425\u001b[0m     logs \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mtest_function\u001b[49m\u001b[43m(\u001b[49m\u001b[43miterator\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    426\u001b[0m     logs \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_pythonify_logs(logs)\n\u001b[1;32m    427\u001b[0m     callbacks\u001b[38;5;241m.\u001b[39mon_test_batch_end(step, logs)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/tensorflow/python/util/traceback_utils.py:150\u001b[0m, in \u001b[0;36mfilter_traceback.<locals>.error_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    148\u001b[0m filtered_tb \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m    149\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m--> 150\u001b[0m   \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfn\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    151\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[1;32m    152\u001b[0m   filtered_tb \u001b[38;5;241m=\u001b[39m _process_traceback_frames(e\u001b[38;5;241m.\u001b[39m__traceback__)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py:832\u001b[0m, in \u001b[0;36mFunction.__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    829\u001b[0m compiler \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mxla\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_jit_compile \u001b[38;5;28;01melse\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnonXla\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    831\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m OptionalXlaContext(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_jit_compile):\n\u001b[0;32m--> 832\u001b[0m   result \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_call\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    834\u001b[0m new_tracing_count \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mexperimental_get_tracing_count()\n\u001b[1;32m    835\u001b[0m without_tracing \u001b[38;5;241m=\u001b[39m (tracing_count \u001b[38;5;241m==\u001b[39m new_tracing_count)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py:877\u001b[0m, in \u001b[0;36mFunction._call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    874\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_lock\u001b[38;5;241m.\u001b[39mrelease()\n\u001b[1;32m    875\u001b[0m \u001b[38;5;66;03m# In this case we have not created variables on the first call. So we can\u001b[39;00m\n\u001b[1;32m    876\u001b[0m \u001b[38;5;66;03m# run the first trace but we should fail if variables are created.\u001b[39;00m\n\u001b[0;32m--> 877\u001b[0m results \u001b[38;5;241m=\u001b[39m \u001b[43mtracing_compilation\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcall_function\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    878\u001b[0m \u001b[43m    \u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkwds\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_variable_creation_config\u001b[49m\n\u001b[1;32m    879\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    880\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_created_variables:\n\u001b[1;32m    881\u001b[0m   \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mCreating variables on a non-first call to a function\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    882\u001b[0m                    \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m decorated with tf.function.\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/tensorflow/python/eager/polymorphic_function/tracing_compilation.py:139\u001b[0m, in \u001b[0;36mcall_function\u001b[0;34m(args, kwargs, tracing_options)\u001b[0m\n\u001b[1;32m    137\u001b[0m bound_args \u001b[38;5;241m=\u001b[39m function\u001b[38;5;241m.\u001b[39mfunction_type\u001b[38;5;241m.\u001b[39mbind(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[1;32m    138\u001b[0m flat_inputs \u001b[38;5;241m=\u001b[39m function\u001b[38;5;241m.\u001b[39mfunction_type\u001b[38;5;241m.\u001b[39munpack_inputs(bound_args)\n\u001b[0;32m--> 139\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunction\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_call_flat\u001b[49m\u001b[43m(\u001b[49m\u001b[43m  \u001b[49m\u001b[38;5;66;43;03m# pylint: disable=protected-access\u001b[39;49;00m\n\u001b[1;32m    140\u001b[0m \u001b[43m    \u001b[49m\u001b[43mflat_inputs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcaptured_inputs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mfunction\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcaptured_inputs\u001b[49m\n\u001b[1;32m    141\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/tensorflow/python/eager/polymorphic_function/concrete_function.py:1323\u001b[0m, in \u001b[0;36mConcreteFunction._call_flat\u001b[0;34m(self, tensor_inputs, captured_inputs)\u001b[0m\n\u001b[1;32m   1319\u001b[0m possible_gradient_type \u001b[38;5;241m=\u001b[39m gradients_util\u001b[38;5;241m.\u001b[39mPossibleTapeGradientTypes(args)\n\u001b[1;32m   1320\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m (possible_gradient_type \u001b[38;5;241m==\u001b[39m gradients_util\u001b[38;5;241m.\u001b[39mPOSSIBLE_GRADIENT_TYPES_NONE\n\u001b[1;32m   1321\u001b[0m     \u001b[38;5;129;01mand\u001b[39;00m executing_eagerly):\n\u001b[1;32m   1322\u001b[0m   \u001b[38;5;66;03m# No tape is watching; skip to running the function.\u001b[39;00m\n\u001b[0;32m-> 1323\u001b[0m   \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_inference_function\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcall_preflattened\u001b[49m\u001b[43m(\u001b[49m\u001b[43margs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1324\u001b[0m forward_backward \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_select_forward_and_backward_functions(\n\u001b[1;32m   1325\u001b[0m     args,\n\u001b[1;32m   1326\u001b[0m     possible_gradient_type,\n\u001b[1;32m   1327\u001b[0m     executing_eagerly)\n\u001b[1;32m   1328\u001b[0m forward_function, args_with_tangents \u001b[38;5;241m=\u001b[39m forward_backward\u001b[38;5;241m.\u001b[39mforward()\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/tensorflow/python/eager/polymorphic_function/atomic_function.py:216\u001b[0m, in \u001b[0;36mAtomicFunction.call_preflattened\u001b[0;34m(self, args)\u001b[0m\n\u001b[1;32m    214\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mcall_preflattened\u001b[39m(\u001b[38;5;28mself\u001b[39m, args: Sequence[core\u001b[38;5;241m.\u001b[39mTensor]) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m Any:\n\u001b[1;32m    215\u001b[0m \u001b[38;5;250m  \u001b[39m\u001b[38;5;124;03m\"\"\"Calls with flattened tensor inputs and returns the structured output.\"\"\"\u001b[39;00m\n\u001b[0;32m--> 216\u001b[0m   flat_outputs \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcall_flat\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    217\u001b[0m   \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mfunction_type\u001b[38;5;241m.\u001b[39mpack_output(flat_outputs)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/tensorflow/python/eager/polymorphic_function/atomic_function.py:251\u001b[0m, in \u001b[0;36mAtomicFunction.call_flat\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m    249\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m record\u001b[38;5;241m.\u001b[39mstop_recording():\n\u001b[1;32m    250\u001b[0m   \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_bound_context\u001b[38;5;241m.\u001b[39mexecuting_eagerly():\n\u001b[0;32m--> 251\u001b[0m     outputs \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_bound_context\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcall_function\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    252\u001b[0m \u001b[43m        \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mname\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    253\u001b[0m \u001b[43m        \u001b[49m\u001b[38;5;28;43mlist\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43margs\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    254\u001b[0m \u001b[43m        \u001b[49m\u001b[38;5;28;43mlen\u001b[39;49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfunction_type\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mflat_outputs\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    255\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    256\u001b[0m   \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    257\u001b[0m     outputs \u001b[38;5;241m=\u001b[39m make_call_op_in_graph(\n\u001b[1;32m    258\u001b[0m         \u001b[38;5;28mself\u001b[39m,\n\u001b[1;32m    259\u001b[0m         \u001b[38;5;28mlist\u001b[39m(args),\n\u001b[1;32m    260\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_bound_context\u001b[38;5;241m.\u001b[39mfunction_call_options\u001b[38;5;241m.\u001b[39mas_attrs(),\n\u001b[1;32m    261\u001b[0m     )\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/tensorflow/python/eager/context.py:1486\u001b[0m, in \u001b[0;36mContext.call_function\u001b[0;34m(self, name, tensor_inputs, num_outputs)\u001b[0m\n\u001b[1;32m   1484\u001b[0m cancellation_context \u001b[38;5;241m=\u001b[39m cancellation\u001b[38;5;241m.\u001b[39mcontext()\n\u001b[1;32m   1485\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m cancellation_context \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m-> 1486\u001b[0m   outputs \u001b[38;5;241m=\u001b[39m \u001b[43mexecute\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mexecute\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   1487\u001b[0m \u001b[43m      \u001b[49m\u001b[43mname\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdecode\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mutf-8\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1488\u001b[0m \u001b[43m      \u001b[49m\u001b[43mnum_outputs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mnum_outputs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1489\u001b[0m \u001b[43m      \u001b[49m\u001b[43minputs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtensor_inputs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1490\u001b[0m \u001b[43m      \u001b[49m\u001b[43mattrs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mattrs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1491\u001b[0m \u001b[43m      \u001b[49m\u001b[43mctx\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1492\u001b[0m \u001b[43m  \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1493\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m   1494\u001b[0m   outputs \u001b[38;5;241m=\u001b[39m execute\u001b[38;5;241m.\u001b[39mexecute_with_cancellation(\n\u001b[1;32m   1495\u001b[0m       name\u001b[38;5;241m.\u001b[39mdecode(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mutf-8\u001b[39m\u001b[38;5;124m\"\u001b[39m),\n\u001b[1;32m   1496\u001b[0m       num_outputs\u001b[38;5;241m=\u001b[39mnum_outputs,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   1500\u001b[0m       cancellation_manager\u001b[38;5;241m=\u001b[39mcancellation_context,\n\u001b[1;32m   1501\u001b[0m   )\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/tensorflow/python/eager/execute.py:53\u001b[0m, in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     51\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m     52\u001b[0m   ctx\u001b[38;5;241m.\u001b[39mensure_initialized()\n\u001b[0;32m---> 53\u001b[0m   tensors \u001b[38;5;241m=\u001b[39m \u001b[43mpywrap_tfe\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mTFE_Py_Execute\u001b[49m\u001b[43m(\u001b[49m\u001b[43mctx\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_handle\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdevice_name\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mop_name\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m     54\u001b[0m \u001b[43m                                      \u001b[49m\u001b[43minputs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mattrs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mnum_outputs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     55\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m core\u001b[38;5;241m.\u001b[39m_NotOkStatusException \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[1;32m     56\u001b[0m   \u001b[38;5;28;01mif\u001b[39;00m name \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "],"ename":"KeyboardInterrupt","evalue":"","output_type":"error"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model_he.evaluate(X_test, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:31:35.279160Z","iopub.execute_input":"2024-07-13T09:31:35.279644Z","iopub.status.idle":"2024-07-13T09:31:35.462099Z","shell.execute_reply.started":"2024-07-13T09:31:35.279610Z","shell.execute_reply":"2024-07-13T09:31:35.460729Z"},"trusted":true},"execution_count":32,"outputs":[{"name":"stdout","text":"\u001b[1m32/32\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - loss: 4.1424 - mse: 4.1424\n","output_type":"stream"},{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"[4.404214859008789, 4.404214859008789]"},"metadata":{}}]},{"cell_type":"code","source":"model_lecun = keras.models.Sequential([\n    keras.layers.Input(shape = X_train.shape[1:]),\n    keras.layers.Dense(units= 500 , activation = \"selu\", kernel_initializer =\"lecun_normal\"), \n    keras.layers.Dense(units= 300, activation = \"selu\", kernel_initializer =\"lecun_normal\" ), \n    keras.layers.Dense(units= 300, activation = \"selu\", kernel_initializer =\"lecun_normal\" ),\n    keras.layers.Dense(units= 300, activation = \"selu\", kernel_initializer =\"lecun_normal\" ),\n    keras.layers.Dense(units= 100, activation = \"selu\", kernel_initializer =\"lecun_normal\"),\n    keras.layers.Dense(units= 100, activation = \"selu\", kernel_initializer =\"lecun_normal\" ),\n    keras.layers.Dense(units= 1, activation = \"selu\", kernel_initializer =\"lecun_normal\" ) ]\n)\n\nmodel_lecun.compile(\n    optimizer = keras.optimizers.Adam(learning_rate=0.001),\n    loss = keras.losses.mse,\n    metrics = ['mse']\n)\n\nmodel_lecun.fit(\n    X_train, \n    y_train, \n    validation_split= 0.1,\n    epochs = 100,\n    batch_size = 8,\n    callbacks = [es_cb]   \n)","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:33:32.429190Z","iopub.execute_input":"2024-07-13T09:33:32.429761Z","iopub.status.idle":"2024-07-13T09:35:24.282479Z","shell.execute_reply.started":"2024-07-13T09:33:32.429720Z","shell.execute_reply":"2024-07-13T09:35:24.281131Z"},"trusted":true},"execution_count":33,"outputs":[{"name":"stdout","text":"Epoch 1/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 6ms/step - loss: 77.4906 - mse: 77.4906 - val_loss: 5.8161 - val_mse: 5.8161\nEpoch 2/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 5ms/step - loss: 10.2414 - mse: 10.2414 - val_loss: 23.4291 - val_mse: 23.4291\nEpoch 3/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 6ms/step - loss: 9.0288 - mse: 9.0288 - val_loss: 7.5012 - val_mse: 7.5012\nEpoch 4/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 7.3789 - mse: 7.3789 - val_loss: 5.6222 - val_mse: 5.6222\nEpoch 5/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.6892 - mse: 6.6892 - val_loss: 5.8878 - val_mse: 5.8878\nEpoch 6/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 5ms/step - loss: 7.1615 - mse: 7.1615 - val_loss: 4.2908 - val_mse: 4.2908\nEpoch 7/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.4519 - mse: 6.4519 - val_loss: 4.6812 - val_mse: 4.6812\nEpoch 8/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 6ms/step - loss: 6.8324 - mse: 6.8324 - val_loss: 7.0512 - val_mse: 7.0512\nEpoch 9/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 5ms/step - loss: 6.3475 - mse: 6.3475 - val_loss: 7.3307 - val_mse: 7.3307\nEpoch 10/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.4949 - mse: 6.4949 - val_loss: 4.3206 - val_mse: 4.3206\nEpoch 11/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.0464 - mse: 6.0464 - val_loss: 5.4857 - val_mse: 5.4857\nEpoch 12/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.6139 - mse: 6.6139 - val_loss: 4.7094 - val_mse: 4.7094\nEpoch 13/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.6479 - mse: 5.6479 - val_loss: 5.9403 - val_mse: 5.9403\nEpoch 14/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 6ms/step - loss: 5.7131 - mse: 5.7131 - val_loss: 6.0145 - val_mse: 6.0145\nEpoch 15/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 5ms/step - loss: 5.7988 - mse: 5.7988 - val_loss: 5.2020 - val_mse: 5.2020\nEpoch 16/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.7413 - mse: 5.7413 - val_loss: 6.3999 - val_mse: 6.3999\nEpoch 17/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 5ms/step - loss: 5.9787 - mse: 5.9787 - val_loss: 5.9785 - val_mse: 5.9785\nEpoch 18/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 6.6684 - mse: 6.6684 - val_loss: 4.8474 - val_mse: 4.8474\nEpoch 19/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 5.3821 - mse: 5.3821 - val_loss: 11.3623 - val_mse: 11.3623\nEpoch 20/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 5ms/step - loss: 5.3297 - mse: 5.3297 - val_loss: 4.4562 - val_mse: 4.4562\n","output_type":"stream"},{"execution_count":33,"output_type":"execute_result","data":{"text/plain":"<keras.src.callbacks.history.History at 0x790b0ca3aa10>"},"metadata":{}}]},{"cell_type":"code","source":"model_lecun.evaluate(X_test, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-07-13T09:35:49.859950Z","iopub.execute_input":"2024-07-13T09:35:49.860383Z","iopub.status.idle":"2024-07-13T09:35:50.048098Z","shell.execute_reply.started":"2024-07-13T09:35:49.860347Z","shell.execute_reply":"2024-07-13T09:35:50.046787Z"},"trusted":true},"execution_count":35,"outputs":[{"name":"stdout","text":"\u001b[1m32/32\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - loss: 4.2242 - mse: 4.2242\n","output_type":"stream"},{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"[4.534625053405762, 4.534625053405762]"},"metadata":{}}]},{"cell_type":"code","source":"model_he_bn = keras.models.Sequential([\n    keras.layers.Input(shape = X_train.shape[1:]),\n    keras.layers.BatchNormalization(),\n    keras.layers.Dense(units= 500 , activation = \"relu\", kernel_initializer =\"he_normal\"), \n    keras.layers.Dense(units= 300, activation = \"relu\", kernel_initializer =\"he_normal\" ), \n    keras.layers.Dense(units= 300, activation = \"relu\", kernel_initializer =\"he_normal\" ),\n    keras.layers.Dense(units= 300, activation = \"relu\", kernel_initializer =\"he_normal\" ),\n    keras.layers.Dense(units= 100, activation = \"relu\", kernel_initializer =\"he_normal\" ),\n    keras.layers.Dense(units= 100, activation = \"relu\", kernel_initializer =\"he_normal\" ),\n    keras.layers.Dense(units= 1, activation = \"relu\", kernel_initializer =\"he_normal\" ) ]\n)\n\nmodel_he_bn.compile(\n    optimizer = keras.optimizers.Adam(learning_rate=0.001),\n    loss = keras.losses.mse,\n    metrics = ['mse']\n)\n\nmodel_he_bn.fit(\n    X_train, \n    y_train, \n    validation_split= 0.1,\n    epochs = 100,\n    batch_size = 8,\n    callbacks = [es_cb]\n    \n)","metadata":{"execution":{"iopub.status.busy":"2024-07-13T10:28:51.157105Z","iopub.execute_input":"2024-07-13T10:28:51.158192Z"},"trusted":true},"execution_count":null,"outputs":[{"name":"stdout","text":"Epoch 1/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 6ms/step - loss: 308.0016 - mse: 308.0016 - val_loss: 30.3233 - val_mse: 30.3233\nEpoch 2/100\n\u001b[1m1013/1013\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 5ms/step - loss: 101.3610 - mse: 101.3610 - val_loss: 14.4199 - val_mse: 14.4199\nEpoch 3/100\n\u001b[1m  22/1013\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 65.1990 - mse: 65.1990","output_type":"stream"}]}]}